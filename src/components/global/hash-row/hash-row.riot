<hash-row>
    <div class="hash-row-index">{this.state.index} ➡️ </div>
    <div each={ item in props.rowContent }>
        <hash-element elementKey={item.key} elementValue={item.value}>
        </hash-element>
    </div>

    <style>
        :host {
            display:flex;
            flex-flow: row wrap;
            align-items: center;
            justify-content: flex-start;
            border: 1px solid grey;
            border-radius: min(10%, 10px);
            padding: 10px 5px;
            margin-bottom: 3px;
            margin-top: 1em;
        }

        .hash-row-index {
            text-align: center;
            min-width: 4em;
            background-color: #FEBE64;
            border: 1px solid grey;
            border-radius: 5px;
            margin-left: 1em;
            margin-right: 1em;
        }

        :host > div {
            margin-top: 5px;
            margin-bottom: 5px;
        }


    </style>

    <script>
    import HashElement from "../hash-element/hash-element.riot";

    const testList =  { "a" : 13, "b" : 26, "c" : 46 };

    export default function HashRow() {
        return {
            components: {
                HashElement,
            },
            state: {
                index: 1,
                elements: [],
            },
            onBeforeMount(props, state) {
                state.index = props.index || 0;
                if (!props.rowContent || props.rowContent === []) {
                    for (let x in testList) {
                        state.elements.push( { key: x, value: testList[x] } );
                    }
                } else {
                    state.elements = [ ...props.rowContent];
                }
            },
            addElement(key, value) {
                this.update({ elements: this.state.elements.push({ key: key, value: value })  });   
            }
        }
    }

    </script>

</hash-row>